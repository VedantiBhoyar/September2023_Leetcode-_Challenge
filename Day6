/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    int Length(ListNode head){
        int count=0;
        ListNode curr=head;
        while(curr!=null){
            count++;
            curr=curr.next;
        }
        return count;
    }
    public ListNode[] splitListToParts(ListNode head, int k) {
        ListNode arr[]=new ListNode[k];
        int len=Length(head);
        int partSize=len/k;
        int extra=len%k;

        ListNode temp=head;
        for(int i=0;i<k;i++){
            arr[i]=temp;
            int currentPartSize=partSize + (extra-->0 ?1:0 );
            for(int j=0;j<currentPartSize-1;j++){
                temp=temp.next;
            }
            if(temp!=null){
                ListNode next=temp.next;
                temp.next=null;
                temp=next;
            }
        }
        return arr;
        
    }
}
